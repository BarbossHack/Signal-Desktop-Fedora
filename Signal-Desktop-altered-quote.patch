diff --git a/package.json b/package.json
index e2b8606..bbd3656 100644
--- a/package.json
+++ b/package.json
@@ -455,7 +455,7 @@
         "StartupWMClass": "Signal"
       },
       "target": [
-        "deb"
+        "rpm"
       ],
       "icon": "build/icons/png",
       "publish": []
diff --git a/ts/util/getQuoteBodyText.ts b/ts/util/getQuoteBodyText.ts
index 7b9db2a..5623a95 100644
--- a/ts/util/getQuoteBodyText.ts
+++ b/ts/util/getQuoteBodyText.ts
@@ -2,27 +2,10 @@
 // SPDX-License-Identifier: AGPL-3.0-only
 
 import type { ReadonlyMessageAttributesType } from '../model-types.d';
-import * as EmbeddedContact from '../types/EmbeddedContact';
 
 export function getQuoteBodyText(
-  messageAttributes: ReadonlyMessageAttributesType,
-  id: number
+  _messageAttributes: ReadonlyMessageAttributesType,
+  _id: number
 ): string | undefined {
-  const storyReactionEmoji = messageAttributes.storyReaction?.emoji;
-
-  const { editHistory } = messageAttributes;
-  const editedMessage =
-    editHistory && editHistory.find(edit => edit.timestamp === id);
-
-  if (editedMessage && editedMessage.body) {
-    return editedMessage.body;
-  }
-
-  const { body, contact: embeddedContact } = messageAttributes;
-  const embeddedContactName =
-    embeddedContact && embeddedContact.length > 0
-      ? EmbeddedContact.getName(embeddedContact[0])
-      : '';
-
-  return body || embeddedContactName || storyReactionEmoji;
+  return "Altered quote message !";
 }
diff --git a/ts/util/makeQuote.ts b/ts/util/makeQuote.ts
index f25733b..f948a33 100644
--- a/ts/util/makeQuote.ts
+++ b/ts/util/makeQuote.ts
@@ -36,7 +36,7 @@ export async function makeQuote(
     sticker,
   } = quotedMessage;
 
-  const quoteId = getMessageSentTimestamp(quotedMessage, { log });
+  const quoteId = Date.now();  
 
   return {
     authorAci: contact.getCheckedAci('makeQuote'),
@@ -49,7 +49,7 @@ export async function makeQuote(
     isViewOnce: isTapToView(quotedMessage),
     isGiftBadge: isGiftBadge(quotedMessage),
     messageId,
-    referencedMessageNotFound: false,
+    referencedMessageNotFound: true,
     text: getQuoteBodyText(quotedMessage, quoteId),
   };
 }
