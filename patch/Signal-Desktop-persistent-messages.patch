diff --git a/package.json b/package.json
index 9ff26de..3e79e6f 100644
--- a/package.json
+++ b/package.json
@@ -492,7 +492,7 @@
     "linux": {
       "category": "Network;InstantMessaging;Chat",
       "target": [
-        "deb"
+        "rpm"
       ],
       "icon": "build/icons/png",
       "publish": []
diff --git a/ts/background.ts b/ts/background.ts
index 750a73d..5a8426a 100644
--- a/ts/background.ts
+++ b/ts/background.ts
@@ -311,17 +311,7 @@ export async function startApp(): Promise<void> {
     wait: 500,
     maxSize: 100,
     processBatch: async deliveryReceipts => {
-      const groups = groupBy(deliveryReceipts, 'conversationId');
-      await Promise.all(
-        Object.keys(groups).map(async conversationId => {
-          await conversationJobQueue.add({
-            type: conversationQueueJobEnum.enum.Receipts,
-            conversationId,
-            receiptsType: ReceiptType.Delivery,
-            receipts: groups[conversationId],
-          });
-        })
-      );
+      log.info('Skipping delivery receipt:', deliveryReceipts);
     },
   });
 
diff --git a/ts/components/conversation/Message.tsx b/ts/components/conversation/Message.tsx
index 35db747..2c0e0bd 100644
--- a/ts/components/conversation/Message.tsx
+++ b/ts/components/conversation/Message.tsx
@@ -3383,7 +3383,7 @@ export class Message extends React.PureComponent<Props, State> {
     const { expired, expiring, isTargeted, imageBroken } = this.state;
 
     if (expired) {
-      return null;
+      // Avoid deleting expired messages from UX
     }
 
     if (isSticker && (imageBroken || !attachments || !attachments.length)) {
@@ -3477,7 +3477,6 @@ export class Message extends React.PureComponent<Props, State> {
             shouldCollapseAbove && 'module-message--collapsed-above',
             shouldCollapseBelow && 'module-message--collapsed-below',
             isTargeted ? 'module-message--targeted' : null,
-            expiring ? 'module-message--expired' : null
           )}
           data-testid={timestamp}
           tabIndex={0}
diff --git a/ts/services/expiringMessagesDeletion.ts b/ts/services/expiringMessagesDeletion.ts
index ba5882b..867912c 100644
--- a/ts/services/expiringMessagesDeletion.ts
+++ b/ts/services/expiringMessagesDeletion.ts
@@ -23,6 +23,8 @@ class ExpiringMessagesDeletionService {
   }
 
   async #destroyExpiredMessages() {
+    // Avoid deleting expired messages from DB
+    return;
     try {
       window.SignalContext.log.info(
         'destroyExpiredMessages: Loading messages...'
@@ -75,6 +77,8 @@ class ExpiringMessagesDeletionService {
   }
 
   async #checkExpiringMessages() {
+    // Avoid deleting expired messages from DB
+    return;
     window.SignalContext.log.info(
       'checkExpiringMessages: checking for expiring messages'
     );
diff --git a/ts/util/deleteForEveryone.ts b/ts/util/deleteForEveryone.ts
index 7bc5aa9..236d1b9 100644
--- a/ts/util/deleteForEveryone.ts
+++ b/ts/util/deleteForEveryone.ts
@@ -11,6 +11,8 @@ import { isTooOldToModifyMessage } from './isTooOldToModifyMessage';
 import { drop } from './drop';
 import { eraseMessageContents } from './cleanup';
 import { notificationService } from '../services/notifications';
+import { DataWriter } from '../sql/Client';
+import { postSaveUpdates } from '../util/cleanup';
 
 export async function deleteForEveryone(
   message: MessageModel,
@@ -72,6 +74,26 @@ export async function handleDeleteForEveryone(
   >,
   shouldPersist = true
 ): Promise<void> {
+  // Add a marker to tell message has been deleted
+  message.set({
+    body: `❌ Deleted ❌ ${message.get('body')}`,
+  });
+  // Save the modifyed message to DB
+  if (shouldPersist) {
+    await DataWriter.saveMessage(message.attributes, {
+      ourAci: window.textsecure.storage.user.getCheckedAci(),
+      postSaveUpdates,
+    });
+  }
+  // Update last message on conv
+  drop(
+    window.ConversationController.get(
+      message.attributes.conversationId
+    )?.updateLastMessage()
+  );
+  // Return function before doing something else (delete content, etc.)
+  return;
+
   if (message.deletingForEveryone || message.get('deletedForEveryone')) {
     return;
   }
diff --git a/ts/util/sendReceipts.ts b/ts/util/sendReceipts.ts
index bcfcc00..72916df 100644
--- a/ts/util/sendReceipts.ts
+++ b/ts/util/sendReceipts.ts
@@ -57,6 +57,9 @@ export async function sendReceipts({
     return;
   }
 
+  // do not send read-receipts
+  return;
+
   log.info(`Starting receipt send of type ${type}`);
 
   type ConversationSenderReceiptGroup = {
