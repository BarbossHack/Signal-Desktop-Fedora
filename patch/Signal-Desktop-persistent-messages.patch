diff --git a/package.json b/package.json
index 31399e6..1896916 100644
--- a/package.json
+++ b/package.json
@@ -527,7 +527,7 @@
         }
       },
       "target": [
-        "deb"
+        "rpm"
       ],
       "icon": "build/icons/png",
       "publish": [],
diff --git a/ts/components/conversation/Message.dom.tsx b/ts/components/conversation/Message.dom.tsx
index edc0673..200c904 100644
--- a/ts/components/conversation/Message.dom.tsx
+++ b/ts/components/conversation/Message.dom.tsx
@@ -3295,7 +3295,7 @@ export class Message extends React.PureComponent<Props, State> {
     const { expired, expiring, isTargeted, imageBroken } = this.state;
 
     if (expired) {
-      return null;
+      // Avoid deleting expired messages from UX
     }
 
     if (isSticker && (imageBroken || !attachments || !attachments.length)) {
@@ -3389,7 +3389,6 @@ export class Message extends React.PureComponent<Props, State> {
             shouldCollapseAbove && 'module-message--collapsed-above',
             shouldCollapseBelow && 'module-message--collapsed-below',
             isTargeted ? 'module-message--targeted' : null,
-            expiring ? 'module-message--expired' : null
           )}
           data-testid={timestamp}
           tabIndex={0}
diff --git a/ts/services/expiringMessagesDeletion.preload.ts b/ts/services/expiringMessagesDeletion.preload.ts
index ff86370..14672e7 100644
--- a/ts/services/expiringMessagesDeletion.preload.ts
+++ b/ts/services/expiringMessagesDeletion.preload.ts
@@ -27,6 +27,8 @@ class ExpiringMessagesDeletionService {
   }
 
   async #destroyExpiredMessages() {
+    // Avoid deleting expired messages from DB
+    return;
     try {
       log.info('destroyExpiredMessages: Loading messages...');
       const messages = await DataReader.getExpiredMessages();
@@ -75,6 +77,8 @@ class ExpiringMessagesDeletionService {
   }
 
   async #checkExpiringMessages() {
+    // Avoid deleting expired messages from DB
+    return;
     log.info('checkExpiringMessages: checking for expiring messages');
 
     const soonestExpiry = await DataReader.getSoonestMessageExpiry();
diff --git a/ts/util/deleteForEveryone.preload.ts b/ts/util/deleteForEveryone.preload.ts
index 0021832..f603cc1 100644
--- a/ts/util/deleteForEveryone.preload.ts
+++ b/ts/util/deleteForEveryone.preload.ts
@@ -11,6 +11,8 @@ import { isTooOldToModifyMessage } from './isTooOldToModifyMessage.std.js';
 import { drop } from './drop.std.js';
 import { eraseMessageContents } from './cleanup.preload.js';
 import { notificationService } from '../services/notifications.preload.js';
+import { DataWriter } from '../sql/Client.preload.js';
+import { postSaveUpdates } from '../util/cleanup.preload.js';
 
 const log = createLogger('deleteForEveryone');
 
@@ -74,6 +76,26 @@ export async function handleDeleteForEveryone(
   >,
   shouldPersist = true
 ): Promise<void> {
+  // Add a marker to tell message has been deleted
+  message.set({
+    body: `❌ Deleted ❌ ${message.get('body')}`,
+  });
+  // Save the modifyed message to DB
+  if (shouldPersist) {
+    await DataWriter.saveMessage(message.attributes, {
+      ourAci: window.textsecure.storage.user.getCheckedAci(),
+      postSaveUpdates,
+    });
+  }
+  // Update last message on conv
+  drop(
+    window.ConversationController.get(
+      message.attributes.conversationId
+    )?.updateLastMessage()
+  );
+  // Return function before doing something else (delete content, etc.)
+  return;
+
   if (message.deletingForEveryone || message.get('deletedForEveryone')) {
     return;
   }
diff --git a/ts/util/sendReceipts.preload.ts b/ts/util/sendReceipts.preload.ts
index cfb8e25..b0b79ff 100644
--- a/ts/util/sendReceipts.preload.ts
+++ b/ts/util/sendReceipts.preload.ts
@@ -56,6 +56,9 @@ export async function sendReceipts({
     return;
   }
 
+  // do not send receipts
+  return;
+
   log.info(`Starting receipt send of type ${type}`);
 
   type ConversationSenderReceiptGroup = {
